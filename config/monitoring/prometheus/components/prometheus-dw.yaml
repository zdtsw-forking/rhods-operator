---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-recording-dw
  namespace: redhat-ods-monitoring
data:
  recording.rules: |
    groups:
      - name: SLOs - MCAD Controller
        rules:
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[1d])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate1d
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[1h])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate1h
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[2h])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate2h
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[30m])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate30m
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[3d])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate3d
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[5m])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate5m
        - expr: |
            1 - avg_over_time(probe_success{instance=~"mcad-controller-.*", job="user_facing_endpoints_status"}[6h])
          labels:
            instance: mcad-controller
          record: probe_success:burnrate6h

      - name: SLOs - CodeFlare Operator
        rules:
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[1d])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate1d
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[1h])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate1h
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[2h])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate2h
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[30m])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate30m
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[3d])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate3d
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[5m])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate5m
        - expr: |
            1 - avg_over_time(probe_success{instance=~"codeflare-operator-.*", job="user_facing_endpoints_status"}[6h])
          labels:
            instance: codeflare-operator
          record: probe_success:burnrate6h

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-alerting-backend-dashboard
  namespace: redhat-ods-monitoring
data:
  alerting.rules: |
    groups:
      - name: SLOs-probe_success
        rules:
        - alert: MCAD Controller Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/mcad-controller-probe-success-burn-rate.md'
            summary: MCAD Controller Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate5m{instance=~"mcad-controller"}) by (instance) > (14.40 * (1-0.99950))
            and
            sum(probe_success:burnrate1h{instance=~"mcad-controller"}) by (instance) > (14.40 * (1-0.99950))
          for: 2m
          labels:
            severity: warning
        - alert: MCAD Controller Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/mcad-controller-probe-success-burn-rate.md'
            summary: MCAD Controller Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate30m{instance=~"mcad-controller"}) by (instance) > (6.00 * (1-0.99950))
            and
            sum(probe_success:burnrate6h{instance=~"mcad-controller"}) by (instance) > (6.00 * (1-0.99950))
          for: 15m
          labels:
            severity: warning
        - alert: MCAD Controller Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/mcad-controller-probe-success-burn-rate.md'
            summary: MCAD Controller Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate2h{instance=~"mcad-controller"}) by (instance) > (3.00 * (1-0.99950))
            and
            sum(probe_success:burnrate1d{instance=~"mcad-controller"}) by (instance) > (3.00 * (1-0.99950))
          for: 1h
          labels:
            severity: warning

        - alert: CodeFlare Operator Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/codeflare-operator-probe-success-burn-rate.md'
            summary: CodeFlare Operator Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate5m{instance=~"codeflare-operator"}) by (instance) > (14.40 * (1-0.99950))
            and
            sum(probe_success:burnrate1h{instance=~"codeflare-operator"}) by (instance) > (14.40 * (1-0.99950))
          for: 2m
          labels:
            severity: warning
        - alert: CodeFlare Operator Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/codeflare-operator-probe-success-burn-rate.md'
            summary: CodeFlare Operator Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate30m{instance=~"codeflare-operator"}) by (instance) > (6.00 * (1-0.99950))
            and
            sum(probe_success:burnrate6h{instance=~"codeflare-operator"}) by (instance) > (6.00 * (1-0.99950))
          for: 15m
          labels:
            severity: warning
        - alert: CodeFlare Operator Probe Success Burn Rate
          annotations:
            message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
            triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/codeflare-operator-probe-success-burn-rate.md'
            summary: CodeFlare Operator Probe Success Burn Rate
          expr: |
            sum(probe_success:burnrate2h{instance=~"codeflare-operator"}) by (instance) > (3.00 * (1-0.99950))
            and
            sum(probe_success:burnrate1d{instance=~"codeflare-operator"}) by (instance) > (3.00 * (1-0.99950))
          for: 1h
          labels:
            severity: warning




      - name: Distributed Workloads Kuberay
        interval: 1m
        rules:
          - alert: KubeRay Operator is not running
            expr: absent(up{job=~'KubeRay Operator'}) or up{job=~'KubeRay Operator'} != 1
            labels:
              severity: warning
            annotations:
              description: This alert fires when the KubeRay Operator is not running.
              triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/kuberay-operator-availability.md'
              summary: Alerting for KubeRay Operator
          
      - name: Distributed Workloads MCAD
        interval: 1m
        rules:
          - alert: MCAD is not running
            expr: absent(up{job=~'MCAD Controller'}) or up{job=~'MCAD Controller'} != 1
            labels:
              severity: warning
            annotations:
              description: This alert fires when the MCAD Controller is not running.
              triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/mcad-controller-availability.md'
              summary: Alerting for MCAD Controller
          - alert: MCAD taking too long to be up
            expr: absent_over_time(up{job="MCAD Controller"}[2m]) == 1
            labels:
              severity: warning
            annotations:
              description: This alert fires when the MCAD Controller takes over 2 min. to come back online. Either MCAD is not running and failing to become ready, is misconfigured, or the metrics endpoint is not responding.
              triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/mcad-controller-absent-over-time.md'
              summary: Alerting for MCAD Controller

      - name: Distributed Workloads CodeFlare
        interval: 1m
        rules:
          - alert: CodeFlare Operator is not running
            expr: absent(up{job=~'CodeFlare Operator'}) or up{job=~'CodeFlare Operator'} != 1
            labels:
              severity: warning
            annotations:
              description: This alert fires when the CodeFlare Operator is not running.
              triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/codeflare-operator-availability.md'
              summary: Alerting for CodeFlare Operator
          - alert: CodeFlare Operator taking too long to be up
            expr: absent_over_time(up{job="CodeFlare Operator"}[2m]) == 1
            labels:
              severity: warning
            annotations:
              description: This alert fires when the CodeFlare Operator takes over 2 min. to come back online. Either CodeFlare Operator is not running and failing to become ready, is misconfigured, or the metrics endpoint is not responding.
              triage: 'https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Distributed-Workloads/codeflare-operator-absent-over-time.md'
              summary: Alerting for CodeFlare Operator
